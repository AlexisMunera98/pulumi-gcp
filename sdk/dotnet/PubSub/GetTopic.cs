// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.PubSub
{
    public static class GetTopic
    {
        /// <summary>
        /// Get information about a Google Cloud Pub/Sub Topic. For more information see
        /// the [official documentation](https://cloud.google.com/pubsub/docs/)
        /// and [API](https://cloud.google.com/pubsub/docs/apis).
        /// </summary>
        public static Task<GetTopicResult> InvokeAsync(GetTopicArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetTopicResult>("gcp:pubsub/getTopic:getTopic", args ?? new GetTopicArgs(), options.WithVersion());
    }


    public sealed class GetTopicArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Cloud Pub/Sub Topic.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The project in which the resource belongs. If it
        /// is not provided, the provider project is used.
        /// </summary>
        [Input("project")]
        public string? Project { get; set; }

        public GetTopicArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetTopicResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string KmsKeyName;
        public readonly ImmutableDictionary<string, string> Labels;
        public readonly ImmutableArray<Outputs.GetTopicMessageStoragePolicyResult> MessageStoragePolicies;
        public readonly string Name;
        public readonly string? Project;

        [OutputConstructor]
        private GetTopicResult(
            string id,

            string kmsKeyName,

            ImmutableDictionary<string, string> labels,

            ImmutableArray<Outputs.GetTopicMessageStoragePolicyResult> messageStoragePolicies,

            string name,

            string? project)
        {
            Id = id;
            KmsKeyName = kmsKeyName;
            Labels = labels;
            MessageStoragePolicies = messageStoragePolicies;
            Name = name;
            Project = project;
        }
    }
}
