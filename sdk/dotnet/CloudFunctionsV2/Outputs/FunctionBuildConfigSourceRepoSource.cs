// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Gcp.CloudFunctionsV2.Outputs
{

    [OutputType]
    public sealed class FunctionBuildConfigSourceRepoSource
    {
        /// <summary>
        /// Regex matching branches to build.
        /// </summary>
        public readonly string? BranchName;
        /// <summary>
        /// Regex matching tags to build.
        /// </summary>
        public readonly string? CommitSha;
        /// <summary>
        /// Directory, relative to the source root, in which to run the build.
        /// </summary>
        public readonly string? Dir;
        /// <summary>
        /// Only trigger a build if the revision regex does
        /// NOT match the revision regex.
        /// </summary>
        public readonly bool? InvertRegex;
        /// <summary>
        /// Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
        /// </summary>
        public readonly string? ProjectId;
        /// <summary>
        /// Name of the Cloud Source Repository.
        /// </summary>
        public readonly string? RepoName;
        /// <summary>
        /// Regex matching tags to build.
        /// </summary>
        public readonly string? TagName;

        [OutputConstructor]
        private FunctionBuildConfigSourceRepoSource(
            string? branchName,

            string? commitSha,

            string? dir,

            bool? invertRegex,

            string? projectId,

            string? repoName,

            string? tagName)
        {
            BranchName = branchName;
            CommitSha = commitSha;
            Dir = dir;
            InvertRegex = invertRegex;
            ProjectId = projectId;
            RepoName = repoName;
            TagName = tagName;
        }
    }
}
