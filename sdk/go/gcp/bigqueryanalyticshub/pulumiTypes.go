// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bigqueryanalyticshub

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DataExchangeIamBindingCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// DataExchangeIamBindingConditionInput is an input type that accepts DataExchangeIamBindingConditionArgs and DataExchangeIamBindingConditionOutput values.
// You can construct a concrete instance of `DataExchangeIamBindingConditionInput` via:
//
//	DataExchangeIamBindingConditionArgs{...}
type DataExchangeIamBindingConditionInput interface {
	pulumi.Input

	ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput
	ToDataExchangeIamBindingConditionOutputWithContext(context.Context) DataExchangeIamBindingConditionOutput
}

type DataExchangeIamBindingConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DataExchangeIamBindingConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamBindingCondition)(nil)).Elem()
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput {
	return i.ToDataExchangeIamBindingConditionOutputWithContext(context.Background())
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionOutput)
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return i.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i DataExchangeIamBindingConditionArgs) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionOutput).ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx)
}

// DataExchangeIamBindingConditionPtrInput is an input type that accepts DataExchangeIamBindingConditionArgs, DataExchangeIamBindingConditionPtr and DataExchangeIamBindingConditionPtrOutput values.
// You can construct a concrete instance of `DataExchangeIamBindingConditionPtrInput` via:
//
//	        DataExchangeIamBindingConditionArgs{...}
//
//	or:
//
//	        nil
type DataExchangeIamBindingConditionPtrInput interface {
	pulumi.Input

	ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput
	ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Context) DataExchangeIamBindingConditionPtrOutput
}

type dataExchangeIamBindingConditionPtrType DataExchangeIamBindingConditionArgs

func DataExchangeIamBindingConditionPtr(v *DataExchangeIamBindingConditionArgs) DataExchangeIamBindingConditionPtrInput {
	return (*dataExchangeIamBindingConditionPtrType)(v)
}

func (*dataExchangeIamBindingConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamBindingCondition)(nil)).Elem()
}

func (i *dataExchangeIamBindingConditionPtrType) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return i.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (i *dataExchangeIamBindingConditionPtrType) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamBindingConditionPtrOutput)
}

type DataExchangeIamBindingConditionOutput struct{ *pulumi.OutputState }

func (DataExchangeIamBindingConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamBindingCondition)(nil)).Elem()
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionOutput() DataExchangeIamBindingConditionOutput {
	return o
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionOutput {
	return o
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return o.ToDataExchangeIamBindingConditionPtrOutputWithContext(context.Background())
}

func (o DataExchangeIamBindingConditionOutput) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeIamBindingCondition) *DataExchangeIamBindingCondition {
		return &v
	}).(DataExchangeIamBindingConditionPtrOutput)
}

func (o DataExchangeIamBindingConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DataExchangeIamBindingConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamBindingCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DataExchangeIamBindingConditionPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeIamBindingConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamBindingCondition)(nil)).Elem()
}

func (o DataExchangeIamBindingConditionPtrOutput) ToDataExchangeIamBindingConditionPtrOutput() DataExchangeIamBindingConditionPtrOutput {
	return o
}

func (o DataExchangeIamBindingConditionPtrOutput) ToDataExchangeIamBindingConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamBindingConditionPtrOutput {
	return o
}

func (o DataExchangeIamBindingConditionPtrOutput) Elem() DataExchangeIamBindingConditionOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) DataExchangeIamBindingCondition {
		if v != nil {
			return *v
		}
		var ret DataExchangeIamBindingCondition
		return ret
	}).(DataExchangeIamBindingConditionOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamBindingConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamBindingCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

type DataExchangeIamMemberCondition struct {
	Description *string `pulumi:"description"`
	Expression  string  `pulumi:"expression"`
	Title       string  `pulumi:"title"`
}

// DataExchangeIamMemberConditionInput is an input type that accepts DataExchangeIamMemberConditionArgs and DataExchangeIamMemberConditionOutput values.
// You can construct a concrete instance of `DataExchangeIamMemberConditionInput` via:
//
//	DataExchangeIamMemberConditionArgs{...}
type DataExchangeIamMemberConditionInput interface {
	pulumi.Input

	ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput
	ToDataExchangeIamMemberConditionOutputWithContext(context.Context) DataExchangeIamMemberConditionOutput
}

type DataExchangeIamMemberConditionArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Expression  pulumi.StringInput    `pulumi:"expression"`
	Title       pulumi.StringInput    `pulumi:"title"`
}

func (DataExchangeIamMemberConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamMemberCondition)(nil)).Elem()
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput {
	return i.ToDataExchangeIamMemberConditionOutputWithContext(context.Background())
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionOutput)
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return i.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i DataExchangeIamMemberConditionArgs) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionOutput).ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx)
}

// DataExchangeIamMemberConditionPtrInput is an input type that accepts DataExchangeIamMemberConditionArgs, DataExchangeIamMemberConditionPtr and DataExchangeIamMemberConditionPtrOutput values.
// You can construct a concrete instance of `DataExchangeIamMemberConditionPtrInput` via:
//
//	        DataExchangeIamMemberConditionArgs{...}
//
//	or:
//
//	        nil
type DataExchangeIamMemberConditionPtrInput interface {
	pulumi.Input

	ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput
	ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Context) DataExchangeIamMemberConditionPtrOutput
}

type dataExchangeIamMemberConditionPtrType DataExchangeIamMemberConditionArgs

func DataExchangeIamMemberConditionPtr(v *DataExchangeIamMemberConditionArgs) DataExchangeIamMemberConditionPtrInput {
	return (*dataExchangeIamMemberConditionPtrType)(v)
}

func (*dataExchangeIamMemberConditionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamMemberCondition)(nil)).Elem()
}

func (i *dataExchangeIamMemberConditionPtrType) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return i.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (i *dataExchangeIamMemberConditionPtrType) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DataExchangeIamMemberConditionPtrOutput)
}

type DataExchangeIamMemberConditionOutput struct{ *pulumi.OutputState }

func (DataExchangeIamMemberConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DataExchangeIamMemberCondition)(nil)).Elem()
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionOutput() DataExchangeIamMemberConditionOutput {
	return o
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionOutput {
	return o
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return o.ToDataExchangeIamMemberConditionPtrOutputWithContext(context.Background())
}

func (o DataExchangeIamMemberConditionOutput) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DataExchangeIamMemberCondition) *DataExchangeIamMemberCondition {
		return &v
	}).(DataExchangeIamMemberConditionPtrOutput)
}

func (o DataExchangeIamMemberConditionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionOutput) Expression() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) string { return v.Expression }).(pulumi.StringOutput)
}

func (o DataExchangeIamMemberConditionOutput) Title() pulumi.StringOutput {
	return o.ApplyT(func(v DataExchangeIamMemberCondition) string { return v.Title }).(pulumi.StringOutput)
}

type DataExchangeIamMemberConditionPtrOutput struct{ *pulumi.OutputState }

func (DataExchangeIamMemberConditionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DataExchangeIamMemberCondition)(nil)).Elem()
}

func (o DataExchangeIamMemberConditionPtrOutput) ToDataExchangeIamMemberConditionPtrOutput() DataExchangeIamMemberConditionPtrOutput {
	return o
}

func (o DataExchangeIamMemberConditionPtrOutput) ToDataExchangeIamMemberConditionPtrOutputWithContext(ctx context.Context) DataExchangeIamMemberConditionPtrOutput {
	return o
}

func (o DataExchangeIamMemberConditionPtrOutput) Elem() DataExchangeIamMemberConditionOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) DataExchangeIamMemberCondition {
		if v != nil {
			return *v
		}
		var ret DataExchangeIamMemberCondition
		return ret
	}).(DataExchangeIamMemberConditionOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Expression() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Expression
	}).(pulumi.StringPtrOutput)
}

func (o DataExchangeIamMemberConditionPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DataExchangeIamMemberCondition) *string {
		if v == nil {
			return nil
		}
		return &v.Title
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamBindingConditionInput)(nil)).Elem(), DataExchangeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamBindingConditionPtrInput)(nil)).Elem(), DataExchangeIamBindingConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamMemberConditionInput)(nil)).Elem(), DataExchangeIamMemberConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DataExchangeIamMemberConditionPtrInput)(nil)).Elem(), DataExchangeIamMemberConditionArgs{})
	pulumi.RegisterOutputType(DataExchangeIamBindingConditionOutput{})
	pulumi.RegisterOutputType(DataExchangeIamBindingConditionPtrOutput{})
	pulumi.RegisterOutputType(DataExchangeIamMemberConditionOutput{})
	pulumi.RegisterOutputType(DataExchangeIamMemberConditionPtrOutput{})
}
