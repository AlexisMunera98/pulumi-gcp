// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AuthorityArgs, AuthorityState } from "./authority";
export type Authority = import("./authority").Authority;
export const Authority: typeof import("./authority").Authority = null as any;

export { CaPoolArgs, CaPoolState } from "./caPool";
export type CaPool = import("./caPool").CaPool;
export const CaPool: typeof import("./caPool").CaPool = null as any;

export { CaPoolIamBindingArgs, CaPoolIamBindingState } from "./caPoolIamBinding";
export type CaPoolIamBinding = import("./caPoolIamBinding").CaPoolIamBinding;
export const CaPoolIamBinding: typeof import("./caPoolIamBinding").CaPoolIamBinding = null as any;

export { CaPoolIamMemberArgs, CaPoolIamMemberState } from "./caPoolIamMember";
export type CaPoolIamMember = import("./caPoolIamMember").CaPoolIamMember;
export const CaPoolIamMember: typeof import("./caPoolIamMember").CaPoolIamMember = null as any;

export { CaPoolIamPolicyArgs, CaPoolIamPolicyState } from "./caPoolIamPolicy";
export type CaPoolIamPolicy = import("./caPoolIamPolicy").CaPoolIamPolicy;
export const CaPoolIamPolicy: typeof import("./caPoolIamPolicy").CaPoolIamPolicy = null as any;

export { CertificateArgs, CertificateState } from "./certificate";
export type Certificate = import("./certificate").Certificate;
export const Certificate: typeof import("./certificate").Certificate = null as any;

export { CertificateTemplateArgs, CertificateTemplateState } from "./certificateTemplate";
export type CertificateTemplate = import("./certificateTemplate").CertificateTemplate;
export const CertificateTemplate: typeof import("./certificateTemplate").CertificateTemplate = null as any;

export { CertificateTemplateIamBindingArgs, CertificateTemplateIamBindingState } from "./certificateTemplateIamBinding";
export type CertificateTemplateIamBinding = import("./certificateTemplateIamBinding").CertificateTemplateIamBinding;
export const CertificateTemplateIamBinding: typeof import("./certificateTemplateIamBinding").CertificateTemplateIamBinding = null as any;

export { CertificateTemplateIamMemberArgs, CertificateTemplateIamMemberState } from "./certificateTemplateIamMember";
export type CertificateTemplateIamMember = import("./certificateTemplateIamMember").CertificateTemplateIamMember;
export const CertificateTemplateIamMember: typeof import("./certificateTemplateIamMember").CertificateTemplateIamMember = null as any;

export { CertificateTemplateIamPolicyArgs, CertificateTemplateIamPolicyState } from "./certificateTemplateIamPolicy";
export type CertificateTemplateIamPolicy = import("./certificateTemplateIamPolicy").CertificateTemplateIamPolicy;
export const CertificateTemplateIamPolicy: typeof import("./certificateTemplateIamPolicy").CertificateTemplateIamPolicy = null as any;

export { GetAuthorityArgs, GetAuthorityResult, GetAuthorityOutputArgs } from "./getAuthority";
export const getAuthority: typeof import("./getAuthority").getAuthority = null as any;
export const getAuthorityOutput: typeof import("./getAuthority").getAuthorityOutput = null as any;

utilities.lazyLoad(exports, ["Authority"], () => require("./authority"));
utilities.lazyLoad(exports, ["CaPool"], () => require("./caPool"));
utilities.lazyLoad(exports, ["CaPoolIamBinding"], () => require("./caPoolIamBinding"));
utilities.lazyLoad(exports, ["CaPoolIamMember"], () => require("./caPoolIamMember"));
utilities.lazyLoad(exports, ["CaPoolIamPolicy"], () => require("./caPoolIamPolicy"));
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));
utilities.lazyLoad(exports, ["CertificateTemplate"], () => require("./certificateTemplate"));
utilities.lazyLoad(exports, ["CertificateTemplateIamBinding"], () => require("./certificateTemplateIamBinding"));
utilities.lazyLoad(exports, ["CertificateTemplateIamMember"], () => require("./certificateTemplateIamMember"));
utilities.lazyLoad(exports, ["CertificateTemplateIamPolicy"], () => require("./certificateTemplateIamPolicy"));
utilities.lazyLoad(exports, ["getAuthority","getAuthorityOutput"], () => require("./getAuthority"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "gcp:certificateauthority/authority:Authority":
                return new Authority(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPool:CaPool":
                return new CaPool(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPoolIamBinding:CaPoolIamBinding":
                return new CaPoolIamBinding(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPoolIamMember:CaPoolIamMember":
                return new CaPoolIamMember(name, <any>undefined, { urn })
            case "gcp:certificateauthority/caPoolIamPolicy:CaPoolIamPolicy":
                return new CaPoolIamPolicy(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificate:Certificate":
                return new Certificate(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplate:CertificateTemplate":
                return new CertificateTemplate(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplateIamBinding:CertificateTemplateIamBinding":
                return new CertificateTemplateIamBinding(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplateIamMember:CertificateTemplateIamMember":
                return new CertificateTemplateIamMember(name, <any>undefined, { urn })
            case "gcp:certificateauthority/certificateTemplateIamPolicy:CertificateTemplateIamPolicy":
                return new CertificateTemplateIamPolicy(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/authority", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPool", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPoolIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPoolIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/caPoolIamPolicy", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificate", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplate", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplateIamBinding", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplateIamMember", _module)
pulumi.runtime.registerResourceModule("gcp", "certificateauthority/certificateTemplateIamPolicy", _module)
